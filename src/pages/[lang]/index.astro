---
import MarketingLayout from '../../layouts/MarketingLayout.astro';
import Hero from '../../components/sections/Hero.astro';
import ProblemSolution from '../../components/sections/ProblemSolution.tsx';
import BizbeesProduct from '../../components/sections/BizbeesProduct.tsx';
import Services from '../../components/sections/Services.tsx';
import CaseStudies from '../../components/sections/CaseStudies.tsx';
import WhyUs from '../../components/sections/WhyUs.tsx';
import ContactChat from '../../components/contact/ContactChat.tsx';
import I18nProvider from '../../components/providers/I18nProvider.tsx';
import { locales, resolveLocale } from '../../i18n/config';
import { createI18nInstance } from '../../i18n/i18next';

export function getStaticPaths() {
  return locales.map((lang) => ({ params: { lang } }));
}

const locale = resolveLocale(Astro.params.lang);

// Tłumaczenia meta (tymczasowe)
const metaTranslations = {
  pl: {
    title: 'ZautomatyzujAI — Automatyzuj z pewnością',
    description: 'Projektuj odporne automatyzacje AI z modułowymi procesami, przejrzystą kontrolą jakości i nadzorem człowieka.'
  },
  en: {
    title: 'ZautomatyzujAI — Automate with confidence',
    description: 'Design resilient AI automations with modular processes, transparent quality control and human oversight.'
  }
};

const metaT = metaTranslations[locale as keyof typeof metaTranslations] || metaTranslations.pl;

// Load translations for sections
const i18n = await createI18nInstance(locale);
const t = i18n.getFixedT(locale);
---

<MarketingLayout lang={locale} title={metaT.title} description={metaT.description}>
  <Hero 
    lang={locale} 
    translations={{
      hero: t('hero', { returnObjects: true }),
      navigation: t('navigation', { returnObjects: true })
    }}
  />
  <ProblemSolution 
    client:load
    title={t('problemSolution.title')}
    subtitle={t('problemSolution.subtitle')}
    problems={t('problemSolution.problems', { returnObjects: true })}
    solutionTitle={t('problemSolution.solutionTitle')}
    solutionSubtitle={t('problemSolution.solutionSubtitle')}
    solutions={t('problemSolution.solutions', { returnObjects: true })}
  />
  <BizbeesProduct 
    client:load
    badge={t('bizbeesProduct.badge')}
    title={t('bizbeesProduct.title')}
    subtitle={t('bizbeesProduct.subtitle')}
    description={t('bizbeesProduct.description')}
    philosophy={t('bizbeesProduct.philosophy', { returnObjects: true })}
    features={t('bizbeesProduct.features', { returnObjects: true })}
    featuresTitle={t('hero.features.title')}
    cta={t('bizbeesProduct.cta', { returnObjects: true })}
    mockupAlt={t('bizbeesProduct.mockupAlt')}
    emailPlaceholder={t('bizbeesProduct.emailPlaceholder')}
    emailDisclaimer={t('bizbeesProduct.emailDisclaimer')}
    subscribeButton={t('bizbeesProduct.subscribeButton')}
    clickToWatchDemo={t('bizbeesProduct.clickToWatchDemo')}
    videoNotSupported={t('bizbeesProduct.videoNotSupported')}
    videoDescription={t('bizbeesProduct.videoDescription')}
    videoTitle={t('bizbeesProduct.videoTitle')}
    videoSubtitle={t('bizbeesProduct.videoSubtitle')}
  />
  <Services 
    client:load
    title={t('servicesSection.title')}
    subtitle={t('servicesSection.subtitle')}
    services={t('servicesSection.services', { returnObjects: true })}
    additionalServicesTitle={t('servicesSection.additionalServices.title')}
    additionalServices={t('servicesSection.additionalServices.items', { returnObjects: true })}
    ctaText={t('servicesSection.cta.text')}
    ctaDescription={t('servicesSection.cta.description')}
  />
  <CaseStudies 
    client:load
    title={t('caseStudies.title')}
    subtitle={t('caseStudies.subtitle')}
    metrics={t('caseStudies.metrics', { returnObjects: true })}
    testimonials={t('caseStudies.testimonials', { returnObjects: true })}
  />
  <WhyUs 
    client:load
    title={t('whyUs.title')}
    subtitle={t('whyUs.subtitle')}
    description={t('whyUs.description')}
    features={t('whyUs.features', { returnObjects: true })}
    ctaText={t('whyUs.cta.text')}
    ctaDescription={t('whyUs.cta.description')}
  />
  <section id="contact" aria-labelledby="contact-title" class="mx-auto max-w-4xl px-4 py-16 sm:px-6 lg:px-8">
    <I18nProvider client:load locale={locale}>
      <ContactChat client:load />
    </I18nProvider>
  </section>
</MarketingLayout>
